version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: receipts_postgres
    environment:
      POSTGRES_USER: receipts_user
      POSTGRES_PASSWORD: receipts_pass
      POSTGRES_DB: receipts_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U receipts_user"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: receipts_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  minio:
    image: minio/minio:latest
    container_name: receipts_minio
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    volumes:
      - minio_data:/data
    ports:
      - "9000:9000"
      - "9001:9001"
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  api:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: receipts_api
    environment:
      - SECRET_KEY=${SECRET_KEY:-change-this-secret-key-in-production}
      - DATABASE_URL=postgresql://receipts_user:receipts_pass@postgres:5432/receipts_db
      - REDIS_URL=redis://redis:6379/0
      - STORAGE_TYPE=minio
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin
      - MINIO_BUCKET=receipts
      - MINIO_SECURE=false
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
      - OCR_ENGINE=tesseract
      - ENVIRONMENT=development
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - upload_temp:/tmp/uploads
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      minio:
        condition: service_healthy
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  worker:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: receipts_worker
    environment:
      - SECRET_KEY=${SECRET_KEY:-change-this-secret-key-in-production}
      - DATABASE_URL=postgresql://receipts_user:receipts_pass@postgres:5432/receipts_db
      - REDIS_URL=redis://redis:6379/0
      - STORAGE_TYPE=minio
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin
      - MINIO_BUCKET=receipts
      - MINIO_SECURE=false
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
      - OCR_ENGINE=tesseract
      - ENVIRONMENT=development
    volumes:
      - ./backend:/app
      - upload_temp:/tmp/uploads
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      minio:
        condition: service_healthy
    command: python -m app.worker

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: receipts_frontend
    environment:
      - REACT_APP_API_URL=http://localhost:8000
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - api
    stdin_open: true
    tty: true

volumes:
  postgres_data:
  redis_data:
  minio_data:
  upload_temp:
